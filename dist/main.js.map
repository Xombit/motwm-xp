{"version":3,"file":"main.js","sources":["../src/settings.ts","../src/d35e-adapter.ts","../src/calc/el.ts","../src/calc/xp.ts","../src/ui/XpCalculatorApp.ts","../src/ui/XpBarApp.ts","../src/main.ts"],"sourcesContent":["export function registerSettings() {\n  // Chat toggle\n  game.settings.register(\"motwm-xp\", \"broadcastChat\", {\n    name: \"Broadcast XP to Chat\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: false\n  });\n\n  // Player XP bar visible\n  game.settings.register(\"motwm-xp\", \"showPlayerBar\", {\n    name: \"Show Player XP Bar\",\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true\n  });\n\n  // Player XP bar position (hidden, per-client)\n  game.settings.register(\"motwm-xp\", \"barPos\", {\n    name: \"XP Bar Position\",\n    scope: \"client\",\n    config: false,\n    type: String,\n    default: \"\"\n  });\n\n  // Calculator award mode (the calculator reads this)\n  game.settings.register(\"motwm-xp\", \"awardMode\", {\n    name: \"XP Award Method\",\n    hint: \"RAW 3.5e = per-PC (Level vs EL). Classic 3.0 = split single pot based on APL.\",\n    scope: \"world\",\n    config: true,\n    type: String,\n    choices: {\n      raw35: \"D&D 3.5e (per-PC)\",\n      split30: \"D&D 3.0 (split pot)\"\n    },\n    default: \"raw35\"\n  });\n}\n","export class D35EAdapter {\n  static getXP(actor: Actor): number {\n    // @ts-ignore\n    const v = getProperty(actor, \"system.details.xp.value\");\n    return Number(v ?? 0);\n  }\n  static async setXP(actor: Actor, value: number) {\n    return actor.update({ \"system.details.xp.value\": Number(value) });\n  }\n  static getLevel(actor: Actor): number {\n    // Prefer summed classes for characters\n    // @ts-ignore\n    const classes = getProperty(actor, \"system.classes\");\n    if (classes && typeof classes === \"object\") {\n      let total = 0;\n      for (const cls of Object.values(classes) as any[]) {\n        const lv = Number(getProperty(cls, \"level\") ?? 0);\n        total += lv;\n      }\n      if (total > 0) return total;\n    }\n    // Fallback (NPCs/monsters often have this)\n    // @ts-ignore\n    const fallback = getProperty(actor, \"system.details.level.value\");\n    return Number(fallback ?? 0);\n  }\n  static getCR(actor: Actor): number | null {\n    // @ts-ignore\n    const cr = getProperty(actor, \"system.details.cr.value\");\n    if (cr != null) return Number(cr);\n    // fallback: treat level as CR (PC-sheet BBEG)\n    const lvl = this.getLevel(actor);\n    return lvl ? Number(lvl) : null;\n  }\n}\n","/** EL engine: combine same-CR (+2 per doubling), mixed-EL pairwise */\nexport function groupToEL(cr: number, count: number): number {\n  if (count <= 0) return -Infinity;\n  let el = cr;\n  let k = count;\n  while (k >= 2) {\n    el += 2;\n    k = Math.floor(k / 2);\n  }\n  return el;\n}\n\nexport function combineELs(els: number[]): number {\n  if (!els.length) return -Infinity;\n  let arr = els.slice().sort((a,b)=>a-b);\n  while (arr.length > 1) {\n    const a = arr.pop()!; // largest\n    const b = arr.pop()!; // second largest\n    const diff = Math.abs(a-b);\n    let combined = a;\n    if (diff === 0) combined = a + 2;\n    else if (diff === 1 || diff === 2) combined = a + 1;\n    else combined = a; // smaller negligible\n    arr.push(combined);\n    arr.sort((x,y)=>x-y);\n  }\n  return arr[0];\n}\n","/** ===== D35E progression helpers (single source of truth) ===== */\n\nexport function systemTotalXPForLevel(level: number): number {\n  const L = Math.max(1, Math.floor(level));\n  const rate = game.settings.get(\"D35E\", \"experienceRate\") as string; // \"fast\" | \"medium\" | \"slow\" (or others)\n  const table = (CONFIG as any)?.D35E?.CHARACTER_EXP_LEVELS?.[rate];\n  if (Array.isArray(table)) {\n    return Number(table[Math.min(L - 1, table.length - 1)] ?? 0);\n  }\n  // ultra-safe fallback: 3.5e classic quadratic\n  return Math.floor(1000 * ((L - 1) * L) / 2);\n}\n\nexport function systemXPNeededToNextLevel(level: number): number {\n  const curr = systemTotalXPForLevel(level);\n  const next = systemTotalXPForLevel(level + 1);\n  return Math.max(0, next - curr);\n}\n\nexport function inLevelProgress(totalXP: number, level: number) {\n  const base = systemTotalXPForLevel(level);\n  const need = systemXPNeededToNextLevel(level);\n  const inLevel = Math.max(0, Math.min(need, totalXP - base));\n  return { inLevel, need };\n}\n\nexport function bubblesForLevel(): number { return 13 + 1/3; }\n\n/** ===== Award methods (we'll wire exact tables shortly) ===== */\n\n/** RAW 3.5e per-PC award: Level vs Encounter Level (placeholder stub, will swap to exact DMG matrix) */\nexport function awardRaw35(level: number, el: number): number {\n  if (level <= 0) return 0;\n  const base = 75 * level;                 // equal EL baseline\n  const diff = el - level;\n  const steps = Math.floor(diff / 2);\n  const factor = Math.pow(2, steps);       // +2 EL doubles, −2 halves\n  return Math.max(0, Math.round(base * factor));\n}\n\n/** \n * D&D 3.0 XP Table: Returns the total party XP pot for a given APL and CR\n * Based on DMG Table 7-1 (levels 1-20) with extrapolation to level 40\n */\nexport function getPot30(apl: number, cr: number): number {\n  // D&D 3.0 XP award table: [partyLevel][challengeRating] = totalXP for entire party\n  // Levels 1-20 are from DMG, 21-40 are extrapolated using the ×1.5,×1.5,×4/3,×4/3 pattern\n  const TABLE_30: Record<number, Record<number, number>> = {\n    1:  { 1:300, 2:600, 3:900, 4:1350, 5:1800, 6:2700, 7:3600, 8:5400, 9:7200, 10:10800 },\n    2:  { 1:300, 2:600, 3:900, 4:1350, 5:1800, 6:2700, 7:3600, 8:5400, 9:7200, 10:10800 },\n    3:  { 1:300, 2:600, 3:900, 4:1350, 5:1800, 6:2700, 7:3600, 8:5400, 9:7200, 10:10800 },\n    4:  { 1:300, 2:600, 3:800, 4:1200, 5:1600, 6:2400, 7:3200, 8:4800, 9:6400, 10:9600, 11:12800, 12:18000, 13:21600, 14:28800 },\n    5:  { 1:300, 2:500, 3:750, 4:1000, 5:1500, 6:2250, 7:3000, 8:4500, 9:6000, 10:9000, 11:12000, 12:18000, 13:21600, 14:28800, 15:28800 },\n    6:  { 1:300, 2:450, 3:600, 4:900, 5:1200, 6:1800, 7:2400, 8:3600, 9:4800, 10:7200, 11:10800, 12:14400, 13:21600, 14:25200, 15:28800, 16:28800 },\n    7:  { 1:263, 2:394, 3:525, 4:700, 5:1050, 6:1400, 7:2100, 8:3150, 9:4200, 10:6300, 11:8400, 12:12600, 13:16800, 14:25200, 15:28800 },\n    8:  { 1:200, 2:300, 3:450, 4:600, 5:875, 6:1200, 7:1600, 8:2400, 9:3600, 10:4800, 11:6300, 12:8400, 13:12600, 14:16800, 15:25200, 16:28800 },\n    9:  { 1:0, 2:225, 3:338, 4:506, 5:675, 6:1013, 7:1350, 8:2025, 9:2700, 10:4050, 11:5400, 12:8100, 13:10800, 14:16200, 15:21600, 16:32400, 17:36000, 18:39600 },\n    10: { 3:250, 4:375, 5:563, 6:750, 7:1000, 8:1500, 9:2000, 10:3000, 11:3600, 12:4800, 13:6400, 14:9600 },\n    11: { 4:275, 5:413, 6:619, 7:825, 8:1238, 9:1650, 10:2475, 11:3300, 12:4950, 13:6600, 14:9900, 15:13200, 16:17600, 17:26400, 18:39600 },\n    12: { 5:300, 6:450, 7:675, 8:900, 9:1350, 10:1800, 11:1950, 12:2600, 13:3900, 14:5850, 15:7800, 16:11700, 17:15600, 18:23400, 19:31200, 20:46800 },\n    13: { 6:325, 7:488, 8:731, 9:975, 10:1463, 11:1400, 12:2100, 13:2800, 14:4200, 15:6300, 16:8400, 17:12600, 18:18900, 19:25200, 20:33600 },\n    14: { 6:350, 7:525, 8:788, 9:1050, 10:1575, 11:900, 12:1200, 13:1800, 14:2400, 15:4200, 16:4800, 17:7200, 18:10800, 19:13500, 20:18900 },\n    15: { 7:375, 8:563, 9:844, 10:1125, 11:638, 12:850, 13:1275, 14:1900, 15:2500, 16:4800, 17:7200, 18:10800, 19:13500, 20:18900 },\n    16: { 7:400, 8:600, 9:900, 10:1350, 11:900, 12:1200, 13:1800, 14:2400, 15:3200, 16:4800, 17:7200, 18:10800, 19:14400, 20:19200 },\n    17: { 8:425, 9:638, 10:956, 11:900, 12:1200, 13:1800, 14:2400, 15:3200, 16:4800, 17:7200, 18:10800, 19:14400, 20:19200 },\n    18: { 8:450, 9:675, 10:1013, 11:638, 12:850, 13:1275, 14:1900, 15:2500, 16:4800, 17:7200, 18:10800, 19:14400, 20:19200 },\n    19: { 9:475, 10:713, 11:638, 12:850, 13:1275, 14:1900, 15:2500, 16:4800, 17:7200, 18:10800, 19:14400, 20:19200 },\n    20: { 10:750, 11:900, 12:1200, 13:1800, 14:2400, 15:3200, 16:4800, 17:7200, 18:10800, 19:14400, 20:19200 },\n    // Extrapolated levels 21-40 using ×1.5,×1.5,×4/3,×4/3 pattern from level 20\n    21: { 11:1125, 12:1350, 13:1800, 14:2700, 15:3600, 16:4800, 17:7200, 18:10800, 19:14400, 20:21600, 21:28800, 22:43200, 23:57600, 24:76800 },\n    22: { 12:1688, 13:2025, 14:2700, 15:4050, 16:5400, 17:7200, 18:10800, 19:16200, 20:21600, 21:32400, 22:43200, 23:64800, 24:86400, 25:115200 },\n    23: { 13:2250, 14:2700, 15:3600, 16:5400, 17:7200, 18:9600, 19:14400, 20:21600, 21:28800, 22:43200, 23:57600, 24:86400, 25:115200, 26:153600 },\n    24: { 14:3000, 15:3600, 16:4800, 17:7200, 18:9600, 19:12800, 20:19200, 21:28800, 22:38400, 23:57600, 24:76800, 25:115200, 26:153600, 27:204800 },\n    25: { 15:4500, 16:5400, 17:7200, 18:10800, 19:14400, 20:19200, 21:28800, 22:43200, 23:57600, 24:86400, 25:115200, 26:172800, 27:230400, 28:307200 },\n    26: { 16:6750, 17:8100, 18:10800, 19:16200, 20:21600, 21:28800, 22:43200, 23:64800, 24:86400, 25:129600, 26:172800, 27:259200, 28:345600, 29:460800 },\n    27: { 17:9000, 18:10800, 19:14400, 20:21600, 21:28800, 22:38400, 23:57600, 24:86400, 25:115200, 26:172800, 27:230400, 28:345600, 29:460800, 30:614400 },\n    28: { 18:12000, 19:14400, 20:19200, 21:28800, 22:38400, 23:51200, 24:76800, 25:115200, 26:153600, 27:230400, 28:307200, 29:460800, 30:614400, 31:819200 },\n    29: { 19:18000, 20:21600, 21:28800, 22:43200, 23:57600, 24:76800, 25:115200, 26:172800, 27:230400, 28:345600, 29:460800, 30:691200, 31:921600, 32:1228800 },\n    30: { 20:27000, 21:32400, 22:43200, 23:64800, 24:86400, 25:115200, 26:172800, 27:259200, 28:345600, 29:518400, 30:691200, 31:1036800, 32:1382400, 33:1843200 },\n    31: { 21:36000, 22:43200, 23:57600, 24:86400, 25:115200, 26:153600, 27:230400, 28:345600, 29:460800, 30:691200, 31:921600, 32:1382400, 33:1843200, 34:2457600 },\n    32: { 22:48000, 23:57600, 24:76800, 25:115200, 26:153600, 27:204800, 28:307200, 29:460800, 30:614400, 31:921600, 32:1228800, 33:1843200, 34:2457600, 35:3276800 },\n    33: { 23:72000, 24:86400, 25:115200, 26:172800, 27:230400, 28:307200, 29:460800, 30:691200, 31:921600, 32:1382400, 33:1843200, 34:2764800, 35:3686400, 36:4915200 },\n    34: { 24:108000, 25:129600, 26:172800, 27:259200, 28:345600, 29:460800, 30:691200, 31:1036800, 32:1382400, 33:2073600, 34:2764800, 35:4147200, 36:5529600, 37:7372800 },\n    35: { 25:144000, 26:172800, 27:230400, 28:345600, 29:460800, 30:614400, 31:921600, 32:1382400, 33:1843200, 34:2764800, 35:3686400, 36:5529600, 37:7372800, 38:9830400 },\n    36: { 26:192000, 27:230400, 28:307200, 29:460800, 30:614400, 31:819200, 32:1228800, 33:1843200, 34:2457600, 35:3686400, 36:4915200, 37:7372800, 38:9830400, 39:13107200 },\n    37: { 27:288000, 28:345600, 29:460800, 30:691200, 31:921600, 32:1228800, 33:1843200, 34:2764800, 35:3686400, 36:5529600, 37:7372800, 38:11059200, 39:14745600, 40:19660800 },\n    38: { 28:432000, 29:518400, 30:691200, 31:1036800, 32:1382400, 33:1843200, 34:2764800, 35:4147200, 36:5529600, 37:8294400, 38:11059200, 39:16588800, 40:22118400 },\n    39: { 29:576000, 30:691200, 31:921600, 32:1382400, 33:1843200, 34:2457600, 35:3686400, 36:5529600, 37:7372800, 38:11059200, 39:14745600, 40:22118400 },\n    40: { 30:768000, 31:921600, 32:1228800, 33:1843200, 34:2457600, 35:3276800, 36:4915200, 37:7372800, 38:9830400, 39:14745600, 40:19660800 }\n  };\n\n  const aplInt = Math.max(1, Math.min(40, Math.floor(apl)));\n  const crInt = Math.max(1, Math.floor(cr));\n  \n  // Look up the value in the table\n  const levelRow = TABLE_30[aplInt];\n  if (!levelRow) return 0;\n  \n  const xp = levelRow[crInt];\n  if (xp !== undefined) return xp;\n  \n  // If CR not in table, use the baseline for that APL and apply the standard scaling\n  const baseXP = getBasePot30(aplInt);\n  const diff = crInt - aplInt;\n  \n  // Apply the alternating ×3/2, ×4/3 pattern for higher CRs\n  // Or ×2/3, ×3/4 pattern for lower CRs\n  let result = baseXP;\n  if (diff > 0) {\n    // Higher CR: alternating ×3/2 and ×4/3\n    for (let step = 0; step < diff; step++) {\n      result = Math.floor(result * (step % 2 === 0 ? 3/2 : 4/3));\n    }\n  } else if (diff < 0) {\n    // Lower CR: alternating ×2/3 and ×3/4\n    for (let step = 0; step < Math.abs(diff); step++) {\n      result = Math.floor(result * (step % 2 === 0 ? 2/3 : 3/4));\n    }\n  }\n  \n  return Math.max(0, result);\n}\n\n/** Helper: Get the baseline XP for a party level when CR = APL */\nfunction getBasePot30(apl: number): number {\n  // Levels 1-11: simple 300 × level\n  if (apl <= 11) return 300 * apl;\n  \n  // Irregular levels 12-15 (from actual table)\n  const irregular: Record<number, number> = { 12: 2600, 13: 2800, 14: 2400, 15: 2500 };\n  if (irregular[apl]) return irregular[apl];\n  \n  // Levels 16+: use the geometric progression pattern\n  // Starting from level 16 = 4800, apply ×1.5, ×1.5, ×4/3, ×4/3 pattern\n  let xp = 4800;\n  const pattern = [1.5, 1.5, 4/3, 4/3];\n  for (let level = 17; level <= apl; level++) {\n    const mult = pattern[(level - 17) % 4];\n    xp = Math.floor(xp * mult);\n  }\n  return xp;\n}\n\n/** Classic 3.0 Split: pass a total pot (you compute from APL vs EL) and return each share (weighted elsewhere) */\nexport function split30(pot: number, weight: number, totalWeight: number): number {\n  if (pot <= 0 || totalWeight <= 0) return 0;\n  return Math.round((pot * weight) / totalWeight);\n}\n","import { D35EAdapter } from \"../d35e-adapter\";\nimport { groupToEL, combineELs } from \"../calc/el\";\nimport { awardRaw35, split30, getPot30 } from \"../calc/xp\";\n\ntype ManualAward = {\n  amount: number;                    // user-entered value\n  unit: \"points\" | \"bubbles\";        // how to interpret amount\n  reason: string;                    // chat reason\n};\n\nfunction bubbleSizeForLevel(level: number): number {\n  // per-level span divided by 13⅓\n  const start = (window as any).CONFIG?.D35E\n    ? (CONFIG as any).D35E.CHARACTER_EXP_LEVELS[game.settings.get(\"D35E\",\"experienceRate\") as string][Math.max(0, level-1)]\n    : 0;\n  const next  = (window as any).CONFIG?.D35E\n    ? (CONFIG as any).D35E.CHARACTER_EXP_LEVELS[game.settings.get(\"D35E\",\"experienceRate\") as string][Math.max(0, level)]\n    : start + 1000; // harmless fallback\n  const span = Math.max(1, Number(next) - Number(start));\n  return span / (13 + 1/3);\n}\n\nfunction getModSetting<T = any>(key: string, fallback: T): T {\n  try { return game.settings.get(\"motwm-xp\", key) as T; }\n  catch { return fallback; }\n}\n\ntype PartyEntry = { id: string; name: string; img: string; level: number; earns: boolean; friend: boolean; };\ntype EnemyEntry = { id: string; name: string; img: string; cr: number; };\n\nexport class XpCalculatorApp extends Application {\n  private party: Map<string, PartyEntry> = new Map();\n  private enemies: Map<string, EnemyEntry> = new Map();\n  private manualAwards: Map<string, ManualAward> = new Map(); // key: actorId\n  private elDelta: number = 0;\n  private showElDetails: boolean = false;\n  private lastAward: {\n    enemies: Map<string, EnemyEntry>;\n    manualAwards: Map<string, ManualAward>;\n    elDelta: number;\n    grants: { id: string; name: string; xp: number }[];\n    chatMessageIds: string[];\n  } | null = null;\n\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      id: \"motwmxp-calc\",\n      title: \"MOTWM XP Calculator\",\n      width: 960,\n      height: 660,\n      resizable: true,\n      template: \"modules/motwm-xp/templates/xp-calculator.hbs\"\n    });\n  }\n\n/* ---------- DATA ---------- */\ngetData(): any {\n  // Build EL from enemies (group by CR)\n  const crMap = new Map<number, number>();\n  for (const e of this.enemies.values()) {\n    const cr = Math.max(1, Math.floor(Number(e.cr) || 0));\n    crMap.set(cr, (crMap.get(cr) ?? 0) + 1);\n  }\n  const groupELs: number[] = [];\n  for (const [cr, count] of crMap.entries()) groupELs.push(groupToEL(cr, count));\n\n  // Integer-only EL (allow negative integer modifier)\n  const baseEL = groupELs.length ? combineELs(groupELs) : 0;\n  const delta = Number.isFinite(this.elDelta) ? Math.trunc(this.elDelta) : 0;\n  const elInt = baseEL + delta; // use this for UI and award math\n\n  // Calculate APL and encounter difficulty with party size adjustment\n  const partyLevels = [...this.party.values()].map(p => p.level);\n  const partySize = partyLevels.length;\n  const baseApl = partyLevels.length > 0 ? Math.round(partyLevels.reduce((sum, lvl) => sum + lvl, 0) / partyLevels.length * 10) / 10 : 0;\n  \n  // PF1e party size adjustment: +1 for 6+ chars, -1 for ≤3 chars\n  let sizeAdjustment = 0;\n  if (partySize >= 6) sizeAdjustment = Math.floor((partySize - 4) / 2);\n  else if (partySize <= 3) sizeAdjustment = -1;\n  \n  const adjustedApl = baseApl + sizeAdjustment;\n  const elDiff = elInt - adjustedApl;\n  \n  let difficulty = \"—\";\n  if (baseApl > 0 && elInt > 0) {\n    if (elDiff < 0) difficulty = \"Easy\";\n    else if (elDiff === 0) difficulty = \"Even\";\n    else if (elDiff === 1) difficulty = \"Challenging\";\n    else if (elDiff === 2) difficulty = \"Very Challenging\";\n    else difficulty = \"High Risk\";\n  }\n  \n  const encounterInfo = baseApl > 0 && elInt > 0 \n    ? `APL: ${adjustedApl.toFixed(1)} (${baseApl} base, ${sizeAdjustment >= 0 ? '+' : ''}${sizeAdjustment} size) | EL: ${elInt} | Difficulty: ${difficulty} (${elDiff >= 0 ? '+' : ''}${elDiff})`\n    : \"—\";\n\n  // Detailed EL breakdown for toggle view with step-by-step tree format\n  let elBreakdown = \"\";\n  if (groupELs.length > 0) {\n    const lines: string[] = [];\n    \n    // Step 1: Show individual CR group conversions\n    const crGroups = [...crMap.entries()].map(([cr, count]) => {\n      const groupEL = groupToEL(cr, count);\n      return { cr, count, groupEL, text: `${count}×CR${cr} → EL${groupEL}` };\n    }).sort((a, b) => b.groupEL - a.groupEL); // Sort by EL descending\n    \n    lines.push(...crGroups.map(g => `└─ ${g.text}`));\n    \n    // Step 2: Show combination process if multiple groups\n    if (crGroups.length > 1) {\n      const sortedELs = crGroups.map(g => g.groupEL).sort((a, b) => b - a);\n      let combineSteps: string[] = [];\n      let remaining = [...sortedELs];\n      \n      while (remaining.length > 1) {\n        const highest = remaining.shift()!;\n        const second = remaining.shift()!;\n        const diff = Math.abs(highest - second);\n        let combined = highest;\n        \n        if (diff === 0) {\n          combined = highest + 2;\n          combineSteps.push(`EL${highest} + EL${second} (same) → EL${combined}`);\n        } else if (diff === 1 || diff === 2) {\n          combined = highest + 1;\n          combineSteps.push(`EL${highest} + EL${second} (±${diff}) → EL${combined}`);\n        } else {\n          combineSteps.push(`EL${highest} + EL${second} (±${diff}, negligible) → EL${highest}`);\n        }\n        \n        remaining.push(combined);\n        remaining.sort((a, b) => b - a);\n      }\n      \n      lines.push(...combineSteps.map(step => `    └─ ${step}`));\n    }\n    \n    // Step 3: Show EL modifier if any\n    if (this.elDelta !== 0) {\n      lines.push(`    └─ EL modifier ${this.elDelta >= 0 ? '+' : ''}${this.elDelta} → EL${elInt}`);\n    }\n    \n    elBreakdown = lines.join('\\n');\n  }\n\n  // Settings\n  const awardMode = game.settings.get(\"motwm-xp\", \"awardMode\") as string;\n\n  // Party array + display bubble size + current manual award values\n  const partyArr = [...this.party.values()].map(p => {\n    const m = this.manualAwards?.get?.(p.id) ?? { amount: 0, unit: \"points\", reason: \"\" };\n    return {\n      ...p,\n      bubble: Math.round(bubbleSizeForLevel(p.level)),\n      manual: m\n    };\n  });\n\n  // Live preview\n  let preview: any[] = [];\n\n  if (elInt > 0 && partyArr.some(p => p.earns)) {\n    if (awardMode === \"raw35\") {\n      // RAW 3.5e per-PC\n      preview = partyArr.filter(p => p.earns).map(p => ({\n        id: p.id, name: p.name, level: p.level,\n        el: elInt,\n        xp: awardRaw35(p.level, elInt)\n      }));\n    } else if (awardMode === \"split30\") {\n      // D&D 3.0 split pot (using actual DMG table)\n      const apl = Math.round(partyArr.reduce((a, p) => a + p.level, 0) / Math.max(1, partyArr.length));\n      const pot = getPot30(apl, elInt);\n      const earners = partyArr.filter(p => p.earns);\n      const slice = split30(pot, 1, earners.length);\n      preview = earners.map(p => ({\n        id: p.id, name: p.name, level: p.level,\n        el: elInt,\n        xp: slice\n      }));\n    }\n  }\n\n  return {\n    party: partyArr,\n    enemies: [...this.enemies.values()],\n    el: elInt,               // integer EL for UI\n    encounterInfo: encounterInfo,\n    elBreakdown: elBreakdown,\n    showElDetails: this.showElDetails,\n    elDelta: this.elDelta,   // bind input directly to this value\n    preview,\n    hasRollback: !!this.lastAward\n  };\n}\n\n/* ---------- LISTENERS ---------- */\nactivateListeners(html: JQuery) {\n  super.activateListeners(html);\n\n  // --- Row actions ---\n  html.on(\"click\", \"[data-action='remove-party']\", ev => {\n    const id = (ev.currentTarget as HTMLElement).dataset.id!;\n    this.party.delete(id);\n    this.render();\n  });\n\n  html.on(\"click\", \"[data-action='remove-enemy']\", ev => {\n    const id = (ev.currentTarget as HTMLElement).dataset.id!;\n    this.enemies.delete(id);\n    this.render();\n  });\n\n  html.on(\"change\", \"input[data-action='toggle-earns']\", ev => {\n    const id = (ev.currentTarget as HTMLInputElement).dataset.id!;\n    const p = this.party.get(id);\n    if (p) {\n      p.earns = (ev.currentTarget as HTMLInputElement).checked;\n      this.render(false);\n    }\n  });\n\n  // --- EL modifier: integer only, allow negatives ---\n  html.on(\"change blur\", \"[data-action='el-delta']\", ev => {\n    const s = (ev.currentTarget as HTMLInputElement).value.trim();\n    if (s === \"\" || s === \"-\") return;                 // ignore incomplete/empty\n    const n = parseInt(s, 10);\n    this.elDelta = Number.isFinite(n) ? n : 0;         // commit integer\n    this.render(true);                                  // refresh preview\n  });\n\n  // --- Manual Award inputs (per-party row) ---\n  html.on(\"input\", \"[data-action='award-amount']\", ev => {\n    const row = (ev.currentTarget as HTMLElement).closest(\"[data-id]\") as HTMLElement;\n    const id = row?.dataset.id!;\n    const prev = this.manualAwards.get(id) ?? { amount: 0, unit: \"points\", reason: \"\" };\n    this.manualAwards.set(id, { ...prev, amount: Number((ev.currentTarget as HTMLInputElement).value) || 0 });\n  });\n\n  html.on(\"change\", \"[data-action='award-unit']\", ev => {\n    const row = (ev.currentTarget as HTMLElement).closest(\"[data-id]\") as HTMLElement;\n    const id = row?.dataset.id!;\n    const prev = this.manualAwards.get(id) ?? { amount: 0, unit: \"points\", reason: \"\" };\n    this.manualAwards.set(id, { ...prev, unit: ((ev.currentTarget as HTMLSelectElement).value as \"points\" | \"bubbles\") });\n  });\n\n  html.on(\"input\", \"[data-action='award-reason']\", ev => {\n    const row = (ev.currentTarget as HTMLElement).closest(\"[data-id]\") as HTMLElement;\n    const id = row?.dataset.id!;\n    const prev = this.manualAwards.get(id) ?? { amount: 0, unit: \"points\", reason: \"\" };\n    this.manualAwards.set(id, { ...prev, reason: (ev.currentTarget as HTMLInputElement).value ?? \"\" });\n  });\n\n  // --- Party / setup sources (NEW canonical set) ---\n  html.on(\"click\", \"[data-action='add-online-assigned']\", () => this.addAssignedPlayersToPartyOnlineOnly());\n  html.on(\"click\", \"[data-action='add-all-assigned']\",   () => this.addAssignedPlayersToPartyAll());\n  html.on(\"click\", \"[data-action='add-friendly-scene']\", () => this.addFriendlySceneTokensToParty());\n  html.on(\"click\", \"[data-action='add-selected-party']\", () => this.addSelectedToParty());\n\n  // --- Enemies sources ---\n  html.on(\"click\", \"[data-action='add-selected-enemies']\", () => this.addSelectedToEnemies());\n  html.on(\"click\", \"[data-action='add-hostile-scene']\",    () => this.addHostileSceneTokensToEnemies());\n  html.on(\"click\", \"[data-action='add-neutral-scene']\",    () => this.addNeutralSceneTokensToEnemies());\n\n  // --- Clearers ---\n  html.on(\"click\", \"[data-action='clear-party']\",   () => { this.party.clear();   this.render(true); });\n  html.on(\"click\", \"[data-action='clear-enemies']\", () => { this.enemies.clear(); this.render(true); });\n\n  // --- Apply & Rollback ---\n  html.on(\"click\", \"[data-action='apply-xp']\", () => this.applyXP());\n  html.on(\"click\", \"[data-action='rollback-xp']\", () => this.rollbackXP());\n\n  // --- EL Details Toggle ---\n  html.on(\"click\", \"[data-action='toggle-el-details']\", () => {\n    this.showElDetails = !this.showElDetails;\n    (this as any).render(false);\n  });\n\n  // --- Double-click to open character sheets ---\n  html.on(\"dblclick\", \".party .row\", ev => {\n    // Don't open sheet if user double-clicked on interactive elements\n    const target = ev.target as HTMLElement;\n    if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'BUTTON' || target.closest('button')) {\n      return;\n    }\n    \n    const id = (ev.currentTarget as HTMLElement).dataset.id;\n    if (id) {\n      const actor = (game as any).actors?.get(id);\n      if (actor?.sheet) {\n        (actor.sheet as any).render(true);\n      }\n    }\n  });\n\n  html.on(\"dblclick\", \".enemies .row\", ev => {\n    // Don't open sheet if user double-clicked on interactive elements\n    const target = ev.target as HTMLElement;\n    if (target.tagName === 'BUTTON' || target.closest('button')) {\n      return;\n    }\n    \n    const id = (ev.currentTarget as HTMLElement).dataset.id;\n    if (id) {\n      const actor = (game as any).actors?.get(id);\n      if (actor?.sheet) {\n        (actor.sheet as any).render(true);\n      }\n    }\n  });\n  }\n  \n/** --- CR extraction used for enemies (unified across all adders) --- */\nprivate getActorCR(a: Actor): number {\n  // Try the common CR property paths first (D35E often stores under .details.cr.value)\n  const crPaths = [\n    \"system.details.cr.value\",   // primary (most D35E sheets)\n    \"system.details.cr\",         // sometimes a plain number\n    \"data.details.cr.value\",     // legacy fallback\n    \"data.details.cr\"            // legacy fallback\n  ];\n\n  for (const p of crPaths) {\n    // @ts-ignore\n    const v = Number(getProperty(a, p));\n    if (Number.isFinite(v) && v > 0) return Math.round(v); // keep integer behavior\n  }\n\n  // Derive from level if no explicit CR present\n  // @ts-ignore\n  const type  = (a as any).type;\n  // @ts-ignore\n  const level = Number(getProperty(a, \"system.details.level.value\")) || 0;\n\n  if (type === \"character\") {\n    // RAW quick heuristic: PC CR ≈ Character Level (adjust here if you use NPC-class rules)\n    return Math.max(1, Math.floor(level));\n  }\n\n  // Monsters/NPCs with no CR: fall back to level if present, else 1\n  return Math.max(1, Math.floor(level) || 1);\n}\n\n\n/** Add all hostile tokens on the current scene to the enemies list (with proper CR). */\nprivate addHostileSceneTokensToEnemies(): void {\n  const HOSTILE = (CONST as any)?.TOKEN_DISPOSITIONS?.HOSTILE ?? -1;\n  const tokens = canvas.tokens?.placeables ?? [];\n  const actors = tokens\n    .filter(t => (t as any).document?.disposition === HOSTILE)\n    .map(t => t.actor)\n    .filter((a): a is Actor => !!a);\n\n  let added = 0;\n  for (const a of actors) {\n    if (!a?.id || this.enemies.has(a.id)) continue;\n\n    const name = a.name ?? \"Unknown\";\n    // @ts-ignore\n    const img  = a.img ?? a.prototypeToken?.texture?.src ?? \"icons/svg/skull.svg\";\n    const cr   = this.getActorCR(a); // <-- unified CR conversion\n\n    this.enemies.set(a.id, { id: a.id, name, img, cr });\n    added++;\n  }\n  ui.notifications?.info(`Added ${added} hostile actor(s) from this scene.`);\n  this.render(true);\n}\n\n/** Add all neutral tokens on the current scene to the enemies list (with proper CR). */\nprivate addNeutralSceneTokensToEnemies(): void {\n  const NEUTRAL = (CONST as any)?.TOKEN_DISPOSITIONS?.NEUTRAL ?? 0;\n  const tokens = canvas.tokens?.placeables ?? [];\n  const actors = tokens\n    .filter(t => (t as any).document?.disposition === NEUTRAL)\n    .map(t => t.actor)\n    .filter((a): a is Actor => !!a);\n\n  let added = 0;\n  for (const a of actors) {\n    if (!a?.id || this.enemies.has(a.id)) continue;\n\n    const name = a.name ?? \"Unknown\";\n    // @ts-ignore\n    const img  = a.img ?? a.prototypeToken?.texture?.src ?? \"icons/svg/eye.svg\";\n    const cr   = this.getActorCR(a); // <-- unified CR conversion\n\n    this.enemies.set(a.id, { id: a.id, name, img, cr });\n    added++;\n  }\n  ui.notifications?.info(`Added ${added} neutral actor(s) from this scene.`);\n  this.render(true);\n}\n\n/** Add a batch of actors into the calculator \"party\" list (dedup by actor id). */\nprivate addActorsToParty(actors: Actor[]): number {\n  let added = 0;\n  for (const a of actors) {\n    if (!a?.id || this.party.has(a.id)) continue;\n\n    const name  = a.name ?? \"Unknown\";\n    // @ts-ignore\n    const img   = a.img ?? a.prototypeToken?.texture?.src ?? \"icons/svg/mystery-man.svg\";\n    // @ts-ignore\n    const level = Number(getProperty(a, \"system.details.level.value\")) || 1;\n\n    this.party.set(a.id, { id: a.id, name, img, level, earns: true, friend: false });\n    added++;\n  }\n  return added;\n}\n\n\n/** (1) Online users with assigned characters (simulate party addon). */\nprivate addAssignedPlayersToPartyOnlineOnly(): void {\n  const users = game.users?.players ?? [];\n  const online = users.filter(u => u.active);\n  const actors = online.map(u => u.character).filter((a): a is Actor => !!a);\n  const added = this.addActorsToParty(actors);\n  ui.notifications?.info(`Added ${added} online assigned PC(s).`);\n  this.render(true);\n}\n\n/** (2) All users with assigned characters (online or not). */\nprivate addAssignedPlayersToPartyAll(): void {\n  const users = game.users?.players ?? [];\n  const actors = users.map(u => u.character).filter((a): a is Actor => !!a);\n  const added = this.addActorsToParty(actors);\n  ui.notifications?.info(`Added ${added} assigned PC(s) (all logins).`);\n  this.render(true);\n}\n\n/** (3) All tokens marked Friendly on current scene (any actor behind them). */\nprivate addFriendlySceneTokensToParty(): void {\n  const FRIENDLY = (CONST as any)?.TOKEN_DISPOSITIONS?.FRIENDLY ?? 1;\n  const tokens = canvas.tokens?.placeables ?? [];\n  const actors = tokens\n    .filter(t => (t as any).document?.disposition === FRIENDLY)\n    .map(t => t.actor)\n    .filter((a): a is Actor => !!a);\n\n  const added = this.addActorsToParty(actors);\n  ui.notifications?.info(`Added ${added} Friendly token actor(s) from this scene.`);\n  this.render(true);\n}\n\n/** Populate from the CURRENT SCENE: only Friendly PC tokens (actor.type === \"character\"). */\nprivate populateScenePlayers(): void {\n  const FRIENDLY = (CONST as any)?.TOKEN_DISPOSITIONS?.FRIENDLY ?? 1;\n\n  const tokens = canvas.tokens?.placeables ?? [];\n  const actors: Actor[] = [];\n\n  for (const t of tokens) {\n    const doc = (t as any).document;           // TokenDocument\n    const a: Actor | undefined = t.actor ?? undefined;\n    if (!doc || !a) continue;\n\n    const isFriendly = doc.disposition === FRIENDLY;\n    const isPC = (a as any).type === \"character\";  // D35E PCs\n\n    if (isFriendly && isPC) actors.push(a);\n  }\n\n  const added = this.addActorsToParty(actors);\n  ui.notifications?.info(`Added ${added} Friendly PC(s) from this scene.`);\n  this.render(true);\n}\n\n/** Add members from Foundry's built-in Party (game.party.members). */\nprivate addFoundryParty(): void {\n  let actors: Actor[] = [];\n\n  // Primary: Core Party (v11+)\n  const coreParty: any = (game as any).party;\n  if (coreParty?.members?.length) {\n    actors = coreParty.members\n      .map((m: any) => m?.actor)\n      .filter((a: Actor | undefined) => !!a);\n  }\n\n  // OPTIONAL fallback: if you want strictly \"Party only\", comment these two blocks out\n  if (!actors.length) {\n    // Fallback #1: users' assigned characters\n    const pcs = game.users?.players\n      .map(u => u.character)\n      .filter((a: Actor | undefined) => !!a) as Actor[];\n    actors = pcs;\n  }\n  if (!actors.length) {\n    // Fallback #2: any PC actors on scene (not restricted to Friendly)\n    const tokens = canvas.tokens?.placeables ?? [];\n    actors = tokens\n      .map(t => t.actor)\n      .filter((a): a is Actor => !!a && ((a as any).type === \"character\"));\n  }\n  // END fallbacks\n\n  const added = this.addActorsToParty(actors);\n  ui.notifications?.info(`Added ${added} actor(s) from Foundry Party.`);\n  this.render(true);\n}\n  /* ---------- ACTIONS ---------- */\n\n  private _manualAwardsToGrants(): { id: string; name: string; xp: number; reason: string }[] {\n  const out: { id: string; name: string; xp: number; reason: string }[] = [];\n  for (const [id, award] of this.manualAwards) {\n    if (!award || !award.amount) continue;\n    const actor = game.actors?.get(id);\n    if (!actor) continue;\n    const name = actor.name ?? id;\n    // @ts-ignore\n    const lvl = Number(getProperty(actor, \"system.details.level.value\") ?? 1);\n    const perBubble = bubbleSizeForLevel(lvl);\n    const xp = Math.round(award.unit === \"bubbles\" ? award.amount * perBubble : award.amount);\n    if (xp !== 0) out.push({ id, name, xp, reason: award.reason?.trim() || \"Manual award\" });\n  }\n  return out;\n}\n\n  private populatePartyPlayers() {\n    let added = 0, skipped = 0;\n    const players = game.users?.players ?? [];\n    for (const u of players) {\n      const a = u.character as Actor | undefined;\n      if (!a) continue;\n      if (this.enemies.has(a.id)) { skipped++; continue; }\n      const level = D35EAdapter.getLevel(a) || 1;\n      const entry: PartyEntry = {\n        id: a.id, name: a.name ?? \"Actor\", img: a.img ?? \"\",\n        level, earns: true, friend: !a.hasPlayerOwner\n      };\n      if (!this.party.has(a.id)) { this.party.set(a.id, entry); added++; } else skipped++;\n    }\n    ui.notifications?.info(`Party +${added}${skipped ? `, skipped ${skipped}` : \"\"}`);\n    this.render();\n  }\n\n  private addSelectedToParty() {\n    const selected = canvas?.tokens?.controlled ?? [];\n    if (!selected.length) return ui.notifications?.warn(\"Select one or more tokens first.\");\n    let added = 0, skipped = 0;\n    for (const t of selected) {\n      const a = (t as any).actor as Actor | null;\n      if (!a) { skipped++; continue; }\n      if (this.enemies.has(a.id)) { skipped++; continue; }\n      const level = D35EAdapter.getLevel(a) || 1;\n      const entry: PartyEntry = {\n        id: a.id, name: a.name ?? \"Actor\", img: a.img ?? \"\",\n        level, earns: true, friend: !a.hasPlayerOwner\n      };\n      if (!this.party.has(a.id)) { this.party.set(a.id, entry); added++; } else skipped++;\n    }\n    ui.notifications?.info(`Party +${added}${skipped ? `, skipped ${skipped}` : \"\"}`);\n    this.render();\n  }\n\n/** Add currently selected canvas tokens as enemies (uses unified CR logic). */\nprivate addSelectedToEnemies(): void {\n  const selected = canvas?.tokens?.controlled ?? [];\n  if (!selected.length) {\n    ui.notifications?.warn(\"Select one or more tokens first.\");\n    return;\n  }\n\n  let added = 0, skipped = 0;\n\n  for (const t of selected) {\n    const a: Actor | undefined = (t as any).actor;\n    if (!a) { skipped++; continue; }\n\n    // Don’t duplicate party members or existing enemies\n    if (this.party.has(a.id) || this.enemies.has(a.id)) { skipped++; continue; }\n\n    // Unified CR extraction (matches hostile/neutral adders)\n    const cr = this.getActorCR(a);\n    if (!Number.isFinite(cr) || cr <= 0) { skipped++; continue; }\n\n    // Safe image fallbacks\n    // @ts-ignore\n    const img = a.img ?? a.prototypeToken?.texture?.src ?? \"icons/svg/skull.svg\";\n    const name = a.name ?? \"Enemy\";\n\n    const entry: EnemyEntry = { id: a.id, name, img, cr: Number(cr) };\n    this.enemies.set(a.id, entry);\n    added++;\n  }\n\n  ui.notifications?.info(`Enemies +${added}${skipped ? `, skipped ${skipped}` : \"\"}`);\n  this.render(true); // refresh preview with updated enemies\n}\n\n\n  private addTargetedToEnemies() {\n    const targets = game.user?.targets ?? new Set();\n    if (!targets.size) return ui.notifications?.warn(\"Target one or more creatures first.\");\n    let added = 0, skipped = 0;\n    for (const t of targets as any as Token[]) {\n      const a = (t as any).actor as Actor | null;\n      if (!a) { skipped++; continue; }\n      if (this.party.has(a.id)) { skipped++; continue; }\n      const crRaw = D35EAdapter.getCR(a); if (!crRaw) { skipped++; continue; }\n      const entry: EnemyEntry = { id: a.id, name: a.name ?? \"Enemy\", img: a.img ?? \"\", cr: Number(crRaw) };\n      if (!this.enemies.has(a.id)) { this.enemies.set(a.id, entry); added++; } else skipped++;\n    }\n    ui.notifications?.info(`Enemies +${added}${skipped ? `, skipped ${skipped}` : \"\"}`);\n    this.render();\n  }\n\n  private async applyXP() {\n  // --- 1) Build encounter grants from your existing preview (keep your logic) ---\n  const encounterGrants: { id: string; name: string; xp: number }[] = [];\n  const partyArr = [...this.party.values()];\n  const earners = partyArr.filter(p => p.earns);\n\n  // Recompute encounter preview (mirror your getData preview branch)\n  const crMap = new Map<number, number>();\n  for (const e of this.enemies.values()) {\n    const cr = Math.max(1, Math.floor(Number(e.cr) || 0));\n    crMap.set(cr, (crMap.get(cr) ?? 0) + 1);\n  }\n  const groupELs: number[] = [];\n  for (const [cr, count] of crMap.entries()) groupELs.push(groupToEL(cr, count));\n  let el = groupELs.length ? combineELs(groupELs) : 0;\n  el += this.elDelta;\n\n  const awardMode = game.settings.get(\"motwm-xp\", \"awardMode\") as string;\n  if (el > 0 && earners.length) {\n    if (awardMode === \"raw35\") {\n      for (const p of earners) encounterGrants.push({ id: p.id, name: p.name, xp: awardRaw35(p.level, el) });\n    } else if (awardMode === \"split30\") {\n      const apl = Math.round(partyArr.reduce((a, p) => a + p.level, 0) / Math.max(1, partyArr.length));\n      const pot = getPot30(apl, el);\n      const slice = split30(pot, 1, earners.length);\n      for (const p of earners) encounterGrants.push({ id: p.id, name: p.name, xp: slice });\n    }\n  }\n\n  // --- 2) Build manual grants (points or segments) ---\n  const manualGrants = this._manualAwardsToGrants();\n\n  // --- 3) Guard: nothing to award at all ---\n  if (!encounterGrants.length && !manualGrants.length) {\n    ui.notifications?.info(\"No XP to award: add enemies and/or manual awards first.\");\n    return;\n  }\n\n  // --- 4) Apply: encounter first, then manual (order is cosmetic only) ---\n  const applyGrants = async (grants: { id: string; name: string; xp: number }[]) => {\n    for (const g of grants) {\n      const actor = game.actors?.get(g.id);\n      if (!actor) continue;\n      // @ts-ignore\n      const curr = Number(getProperty(actor, \"system.details.xp.value\") ?? 0);\n      await actor.update({ \"system.details.xp.value\": curr + g.xp });\n    }\n  };\n\n  if (encounterGrants.length) await applyGrants(encounterGrants);\n  if (manualGrants.length)    await applyGrants(manualGrants);\n\n  // --- 5) Chat: separate cards for clarity ---\n  const chatMessageIds: string[] = [];\n\n  if (game.settings.get(\"motwm-xp\", \"broadcastChat\")) {\n    const esc = (str: any) => {\n      try { return TextEditor.escapeHTML(String(str ?? \"\")); }\n      catch {\n        // @ts-ignore\n        return foundry.utils?.escapeHTML\n          ? foundry.utils.escapeHTML(String(str ?? \"\"))\n          : String(str ?? \"\").replace(/[&<>\"']/g, s =>\n              ({ \"&\": \"&amp;\", \"<\": \"&lt;\", \">\": \"&gt;\", '\"': \"&quot;\", \"'\": \"&#039;\" }[s])\n            );\n      }\n    };\n\n    const makeList = (items: { name: string; xp: number; reason?: string }[]) =>\n      `<ul>${items.map(a => {\n        const safeName = esc(a.name);\n        const r = a.reason ? ` <em>(${esc(a.reason)})</em>` : \"\";\n        return `<li><b>${safeName}</b>: +${a.xp.toLocaleString()} XP${r}</li>`;\n      }).join(\"\")}</ul>`;\n\n    if (encounterGrants.length) {\n      const html = `<div><h3>Encounter XP Awards</h3>${makeList(encounterGrants)}</div>`;\n      const msg = await ChatMessage.create({ content: html });\n      if (msg?.id) chatMessageIds.push(msg.id);\n    }\n    if (manualGrants.length) {\n      // attach reasons where available\n      const withReasons = manualGrants.map(g => ({ ...g, reason: (this.manualAwards.get(g.id)?.reason) || \"Manual award\" }));\n      const html = `<div><h3>Manual XP Awards</h3>${makeList(withReasons)}</div>`;\n      const msg = await ChatMessage.create({ content: html });\n      if (msg?.id) chatMessageIds.push(msg.id);\n    }\n  }\n\n  // --- 6) Save state for rollback, then clear encounter inputs ---\n  this.lastAward = {\n    enemies: new Map(this.enemies),\n    manualAwards: new Map(this.manualAwards),\n    elDelta: this.elDelta,\n    grants: [...encounterGrants, ...manualGrants],\n    chatMessageIds: chatMessageIds\n  };\n\n  this.enemies.clear();\n  this.manualAwards.clear();\n  this.elDelta = 0;\n\n  // Re-render to show cleared state\n  this.render(true);\n  }\n\n  private async rollbackXP() {\n  if (!this.lastAward) {\n    ui.notifications?.warn(\"No XP award to rollback.\");\n    return;\n  }\n\n  // --- 1) Delete chat messages ---\n  for (const id of this.lastAward.chatMessageIds) {\n    const msg = game.messages?.get(id);\n    await msg?.delete();\n  }\n\n  // --- 2) Reverse the XP grants ---\n  const reverseGrants = async (grants: { id: string; name: string; xp: number }[]) => {\n    for (const g of grants) {\n      const actor = game.actors?.get(g.id);\n      if (!actor) continue;\n      // @ts-ignore\n      const curr = Number(getProperty(actor, \"system.details.xp.value\") ?? 0);\n      await actor.update({ \"system.details.xp.value\": curr - g.xp });\n    }\n  };\n\n  await reverseGrants(this.lastAward.grants);\n\n  // --- 3) Restore the state ---\n  this.enemies = new Map(this.lastAward.enemies);\n  this.manualAwards = new Map(this.lastAward.manualAwards);\n  this.elDelta = this.lastAward.elDelta;\n\n  // --- 4) Clear rollback history ---\n  this.lastAward = null;\n\n  // --- 5) Notify & re-render ---\n  ui.notifications?.info(\"XP award rolled back.\");\n  this.render(true);\n  }\n\n}","import { systemTotalXPForLevel, bubblesForLevel } from \"../calc/xp\";\n\ntype Pos = { left: number; top: number };\n\nexport class XpBarApp extends Application {\n  actor: Actor;\n  private _dragging = false;\n  private _dragOffset = { x: 0, y: 0 };\n  private _wired = false; // prevent duplicate listeners\n\n  constructor(actor: Actor, options: Partial<ApplicationOptions> = {}) {\n    super({ popOut: false, id: \"motwmxp-bar\", ...options });\n    this.actor = actor;\n  }\n\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      id: \"motwmxp-bar\",\n      template: \"modules/motwm-xp/templates/xp-bar.hbs\"\n    });\n  }\n\n  /* ---------- position helpers ---------- */\n  private _getSavedPos(): Pos | null {\n    const str = game.settings.get(\"motwm-xp\", \"barPos\") as string;\n    if (!str) return null;\n    try {\n      const p = JSON.parse(str);\n      return p && Number.isFinite(p.left) && Number.isFinite(p.top) ? p : null;\n    } catch {\n      return null;\n    }\n  }\n\n  private async _savePos(left: number, top: number) {\n    await game.settings.set(\"motwm-xp\", \"barPos\", JSON.stringify({ left, top }));\n  }\n\n  /** Apply pixel position; if none saved, center by calculating pixels (no CSS transform). */\n  private _applyPos() {\n    const el = this.element[0] as HTMLElement;\n    if (!el) return;\n\n    const saved = this._getSavedPos();\n    el.style.position = \"fixed\";\n    el.style.zIndex = \"70000\";\n\n    if (saved) {\n      el.style.left = `${saved.left}px`;\n      el.style.top  = `${saved.top}px`;\n    } else {\n      // compute pixel-centered bottom position once\n      const w = el.getBoundingClientRect().width || 520;\n      const h = el.getBoundingClientRect().height || 18;\n      const left = Math.round((window.innerWidth  - w) / 2);\n      const top  = Math.round(window.innerHeight - h - 8);\n      el.style.left = `${left}px`;\n      el.style.top  = `${top}px`;\n    }\n  }\n\n  /* ---------- data: layers + segments ---------- */\n  getData(): any {\n    // read from sheet/system\n    // @ts-ignore\n    const lvl = Number(getProperty(this.actor, \"system.details.level.value\") ?? 1);\n    // @ts-ignore\n    const totalXP = Number(getProperty(this.actor, \"system.details.xp.value\") ?? 0);\n    // @ts-ignore\n    const nextFromSheet = getProperty(this.actor, \"system.details.xp.max\");\n\n    const next0 = Number(nextFromSheet != null ? nextFromSheet : systemTotalXPForLevel(lvl + 1));\n    const prev0 = systemTotalXPForLevel(lvl);\n\n    // thresholds for up to 3 layers\n    const thresholds = [prev0, next0, systemTotalXPForLevel(lvl + 2), systemTotalXPForLevel(lvl + 3)];\n\n    // consume excess into layers\n    let excess = Math.max(0, totalXP - thresholds[0]);\n    const layers: { class: string; width: number }[] = [];\n    for (let i = 0; i < 3; i++) {\n      const span = Math.max(1, thresholds[i + 1] - thresholds[i]);\n      const frac = Math.max(0, Math.min(1, excess / span));\n      layers.push({ class: `layer${i}`, width: Math.round(frac * 10000) / 100 });\n      excess = Math.max(0, excess - span);\n    }\n\n    // segments (13 + mini 1/3)\n    const segments: any[] = [];\n    const totalSegs = bubblesForLevel();\n    for (let i = 1; i <= 13; i++) segments.push({ left: (i / totalSegs) * 100, class: \"\" });\n    segments.push({ left: (13 / totalSegs) * 100, class: \"mini\" });\n\n    const label = `Lv ${lvl} | ${totalXP.toLocaleString()} / ${next0.toLocaleString()} XP`;\n    const tooltip = `Level: ${lvl}`;\n\n    return { layers, segments, label, tooltip };\n  }\n\n  /* ---------- render & drag ---------- */\n  async _render(force?: boolean, options?: any): Promise<void> {\n    await super._render(force, options);\n    this._applyPos();\n\n    if (this._wired) return; // don’t double-bind\n    this._wired = true;\n\n    const el = this.element[0] as HTMLElement;\n\n    // DRAG ON WHOLE BAR\n    el.addEventListener(\"pointerdown\", (ev: PointerEvent) => {\n      ev.preventDefault();\n\n      // 1) snapshot current pixels BEFORE any style changes\n      const rect = el.getBoundingClientRect();\n\n      // 2) ensure explicit pixel position (no bottom/transform anywhere)\n      el.style.left = `${rect.left}px`;\n      el.style.top  = `${rect.top}px`;\n\n      // 3) start drag\n      this._dragging = true;\n      (ev.currentTarget as HTMLElement).setPointerCapture?.(ev.pointerId);\n\n      // 4) offset from pointer to element origin\n      this._dragOffset.x = ev.clientX - rect.left;\n      this._dragOffset.y = ev.clientY - rect.top;\n    });\n\n    window.addEventListener(\"pointermove\", (ev: PointerEvent) => {\n      if (!this._dragging) return;\n      const left = Math.max(0, Math.min(window.innerWidth  - 50, ev.clientX - this._dragOffset.x));\n      const top  = Math.max(0, Math.min(window.innerHeight - 24, ev.clientY - this._dragOffset.y));\n      el.style.left = `${left}px`;\n      el.style.top  = `${top}px`;\n    });\n\n    window.addEventListener(\"pointerup\", async () => {\n      if (!this._dragging) return;\n      this._dragging = false;\n      const left = parseInt(el.style.left || \"0\", 10);\n      const top  = parseInt(el.style.top  || \"0\", 10);\n      await this._savePos(left, top);\n    });\n\n    // keep it on-screen on resize; if saved, re-apply saved pixels; else re-center by pixels\n    window.addEventListener(\"resize\", () => this._applyPos(), { passive: true });\n  }\n\n  render(force?: boolean, options?: any): this {\n    const show = game.settings.get(\"motwm-xp\", \"showPlayerBar\") as boolean;\n    if (!show) return this;\n    return super.render(force, options);\n  }\n}\n","import { registerSettings } from \"./settings\";\nimport { XpCalculatorApp } from \"./ui/XpCalculatorApp\";\nimport { XpBarApp } from \"./ui/XpBarApp\";\nimport \"./styles/styles.css\";\n\ndeclare global {\n  interface Window {\n    MOTWM_XP?: {\n      calc?: XpCalculatorApp;\n      bars?: Map<string, XpBarApp>;\n    };\n  }\n}\n\nHooks.once(\"init\", () => {\n  console.log(\"motwm-xp | init\");\n  registerSettings();\n  window.MOTWM_XP = window.MOTWM_XP ?? { bars: new Map() };\n});\n\nHooks.once(\"ready\", () => {\n  console.log(\"motwm-xp | ready\");\n\n  // Player XP bar: each user sees their own assigned character (if any)\n  const show = game.settings.get(\"motwm-xp\", \"showPlayerBar\") as boolean;\n  const myActor = game.user?.character as Actor | undefined;\n  if (show && myActor) {\n    const bars = window.MOTWM_XP!.bars!;\n    let app = bars.get(myActor.id);\n    if (!app) {\n      app = new XpBarApp(myActor, { top: window.innerHeight - 54, left: 0 });\n      bars.set(myActor.id, app);\n    }\n    app.render(true);\n  }\n\n  // Re-render my bar if my actor's XP/level changes\n  Hooks.on(\"updateActor\", (actor: Actor, changes: any) => {\n    const a = game.user?.character;\n    if (!a || actor.id !== a.id) return;\n    const app = window.MOTWM_XP!.bars!.get(a.id);\n    app?.render(true);\n  });\n\n  // Re-render XP calculator when award mode setting changes\n  Hooks.on(\"updateSetting\", (setting: any, value: any) => {\n    if (setting.key === \"motwm-xp.awardMode\" && window.MOTWM_XP?.calc) {\n      const calc = window.MOTWM_XP.calc as any;\n      if (calc.element) {\n        calc.render(false);\n      }\n    }\n  });\n});\n\n// Add the GM calculator button to Token controls\nHooks.on(\"getSceneControlButtons\", (controls: any[]) => {\n  if (!game.user?.isGM) return;\n  const tokenControl = controls.find(c => c.name === \"token\");\n  tokenControl?.tools?.push({\n    name: \"motwm-xp-calc\",\n    title: \"Open XP Calculator\",\n    icon: \"fas fa-calculator\",\n    visible: true,\n    onClick: () => {\n      if (!window.MOTWM_XP?.calc) window.MOTWM_XP!.calc = new XpCalculatorApp();\n      (window.MOTWM_XP!.calc as any).render(true);\n    },\n    button: true\n  });\n});"],"names":["registerSettings","D35EAdapter","actor","v","value","classes","total","cls","lv","fallback","cr","lvl","groupToEL","count","el","k","combineELs","els","arr","a","b","diff","combined","x","y","systemTotalXPForLevel","level","_a","_b","L","rate","table","bubblesForLevel","awardRaw35","base","steps","factor","getPot30","apl","TABLE_30","aplInt","crInt","levelRow","xp","baseXP","getBasePot30","result","step","irregular","pattern","mult","split30","pot","weight","totalWeight","bubbleSizeForLevel","start","next","XpCalculatorApp","__publicField","crMap","e","groupELs","baseEL","delta","elInt","partyLevels","p","partySize","baseApl","sum","sizeAdjustment","adjustedApl","elDiff","difficulty","encounterInfo","elBreakdown","lines","crGroups","groupEL","g","sortedELs","combineSteps","remaining","highest","second","awardMode","partyArr","m","preview","earners","slice","html","ev","id","s","row","prev","target","crPaths","type","_c","_d","_e","HOSTILE","actors","t","added","name","img","NEUTRAL","u","FRIENDLY","tokens","doc","isFriendly","isPC","coreParty","out","award","perBubble","skipped","players","entry","selected","targets","crRaw","encounterGrants","manualGrants","applyGrants","grants","curr","chatMessageIds","esc","str","makeList","items","safeName","r","msg","withReasons","XpBarApp","options","left","top","saved","w","h","totalXP","nextFromSheet","next0","thresholds","excess","layers","i","span","frac","segments","totalSegs","label","tooltip","force","rect","show","myActor","bars","app","changes","setting","calc","controls","tokenControl","c"],"mappings":"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"}